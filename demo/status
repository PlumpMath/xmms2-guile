;; -*- scheme -*-

;; Copyright (c) 2013 xmms2-guile workers, All rights reserved.
;;
;; Terms for redistribution and use can be found in LICENCE.

(use-modules (ice-9 pretty-print)
             (xmms2 sync))

(define (pretty-time t)
  (let* ((i (if (inexact? t)
                (truncate (inexact->exact t))
                (truncate t)))
         (hours (truncate (/ i 3600)))
         (minutes (truncate (/ (remainder i 3600) 60)))
         (seconds (- i (* 60 minutes) (* 3600 hours))))
    (cond ((>= i 3600) (format #f "~d:~2,'0d:~2,'0d" hours minutes seconds))
          ((>= i 60) (format #f "~2,'0d:~2,'0d" minutes seconds))
          (else (format #f "00:~2,'0d" i)))))

(with-xmms2-connection
 #:handler (lambda (c)
             (let* ((l (xmms2/active-playlist c))
                    (e (xmms2/playlist-entries c l))
                    (id (xmms2/current-id c)))
               (format #t "     Playlist: ~a~%" l)
               (format #t "  # of Tracks: ~d~%" (length e))
               (format #t "       Status: ~a~%" (xmms2/status c))
               (format #t "Playtime (ms): ~a~%" (pretty-time
                                                 (/ (xmms2/playtime c)
                                                    1000)))
               (format #t "       Volume: ~a~%" (xmms2/volume-get c))
               (format #t "   Current-Id: ~d~%" id)
               (format #t "   Track Info:~%")
               (pretty-print (xmms2/medialib-get-info c id)
                             (current-output-port)
                             #:per-line-prefix "            "
                             #:width (or (getenv "COLUMNS")
                                         79)))))
(quit 0)
