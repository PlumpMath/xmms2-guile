;; -*- scheme -*-

;; Copyright (c) 2013 xmms2-guile workers, All rights reserved.
;;
;; Terms for redistribution and use can be found in LICENCE.

(use-modules (ice-9 iconv)
             (xmms2 common)
             (xmms2 sync)
             (xmms2 core value))

(define (pretty-time t)
  (let* ((i (if (inexact? t)
                (truncate (inexact->exact t))
                (truncate t)))
         (hours (truncate (/ i 3600)))
         (minutes (truncate (/ (remainder i 3600) 60)))
         (seconds (- i (* 60 minutes) (* 3600 hours))))
    (cond ((>= i 3600) (format #f "~d:~2,'0d:~2,'0d" hours minutes seconds))
          ((>= i 60) (format #f "~2,'0d:~2,'0d" minutes seconds))
          (else (format #f "00:~2,'0d" i)))))

(define (pretty-track track)
  (define (w/fallback info fallback)
    (if info (cdar info) fallback))
  (define (strip-file url)
    (if (string=? "file://"
                  (substring url 0 7))
        (substring url 7)
        url))
  (let ((album (assq-ref track 'album))
        (artist (assq-ref track 'artist))
        (tracknumber (assq-ref track 'tracknr))
        (tracktitle (assq-ref track 'title))
        (url (assq-ref track 'url)))
    (format #t "~a - ~a - ~2,'0d. ~a~%"
            (w/fallback artist "<No Artist>")
            (w/fallback album "<No Album>")
            (w/fallback tracknumber 0)
            (w/fallback tracktitle "<No Tracktitle>"))
    (format #t "  decoded URL: ~a~%"
            (strip-file
             (bytevector->string (xmms2-decode-url (w/fallback url "<No URL>"))
              "UTF-8"
              'substitute)))))

;; Initialise locale environment. If this is not done, conversion of non-ascii
;; strings in the C glue code will probably fail.
(setlocale LC_ALL "")

(with-xmms2-connection
 #:handler (lambda (c)
             (let* ((l (xmms2/active-playlist c))
                    (e (xmms2/playlist-entries c l))
                    (id (xmms2/current-id c)))
               (format #t "Current Track: ")
               (pretty-track (xmms2/medialib-get-info c id))
               (format #t "     Playtime: ~a~%" (pretty-time
                                                 (/ (xmms2/playtime c)
                                                    1000)))
               (format #t "     Playlist: ~a~%" l)
               (format #t "  # of Tracks: ~d~%" (length e))
               (format #t "       Status: ~a~%" (xmms2/status c))
               (format #t "   Current-Id: ~d~%" id)
               (format #t "       Volume: ~a~%" (xmms2/volume-get c)))))
(quit 0)
